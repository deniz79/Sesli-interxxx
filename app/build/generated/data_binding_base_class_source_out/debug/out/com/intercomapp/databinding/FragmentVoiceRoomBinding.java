// Generated by view binder compiler. Do not edit!
package com.intercomapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.intercomapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentVoiceRoomBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton btnCopyRoomId;

  @NonNull
  public final MaterialButton btnDisconnect;

  @NonNull
  public final MaterialButton btnMute;

  @NonNull
  public final CardView cardControls;

  @NonNull
  public final CardView cardHeader;

  @NonNull
  public final CardView cardMyUser;

  @NonNull
  public final CardView cardOtherUser;

  @NonNull
  public final CardView cardUsers;

  @NonNull
  public final ImageView ivMyAvatar;

  @NonNull
  public final ImageView ivMyMicStatus;

  @NonNull
  public final ImageView ivOtherAvatar;

  @NonNull
  public final ImageView ivOtherMicStatus;

  @NonNull
  public final TextView tvConnectionStatus;

  @NonNull
  public final TextView tvMyName;

  @NonNull
  public final TextView tvMyStatus;

  @NonNull
  public final TextView tvOtherName;

  @NonNull
  public final TextView tvOtherStatus;

  @NonNull
  public final TextView tvParticipantsTitle;

  @NonNull
  public final TextView tvRoomId;

  private FragmentVoiceRoomBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton btnCopyRoomId, @NonNull MaterialButton btnDisconnect,
      @NonNull MaterialButton btnMute, @NonNull CardView cardControls, @NonNull CardView cardHeader,
      @NonNull CardView cardMyUser, @NonNull CardView cardOtherUser, @NonNull CardView cardUsers,
      @NonNull ImageView ivMyAvatar, @NonNull ImageView ivMyMicStatus,
      @NonNull ImageView ivOtherAvatar, @NonNull ImageView ivOtherMicStatus,
      @NonNull TextView tvConnectionStatus, @NonNull TextView tvMyName,
      @NonNull TextView tvMyStatus, @NonNull TextView tvOtherName, @NonNull TextView tvOtherStatus,
      @NonNull TextView tvParticipantsTitle, @NonNull TextView tvRoomId) {
    this.rootView = rootView;
    this.btnCopyRoomId = btnCopyRoomId;
    this.btnDisconnect = btnDisconnect;
    this.btnMute = btnMute;
    this.cardControls = cardControls;
    this.cardHeader = cardHeader;
    this.cardMyUser = cardMyUser;
    this.cardOtherUser = cardOtherUser;
    this.cardUsers = cardUsers;
    this.ivMyAvatar = ivMyAvatar;
    this.ivMyMicStatus = ivMyMicStatus;
    this.ivOtherAvatar = ivOtherAvatar;
    this.ivOtherMicStatus = ivOtherMicStatus;
    this.tvConnectionStatus = tvConnectionStatus;
    this.tvMyName = tvMyName;
    this.tvMyStatus = tvMyStatus;
    this.tvOtherName = tvOtherName;
    this.tvOtherStatus = tvOtherStatus;
    this.tvParticipantsTitle = tvParticipantsTitle;
    this.tvRoomId = tvRoomId;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentVoiceRoomBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentVoiceRoomBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_voice_room, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentVoiceRoomBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_copy_room_id;
      MaterialButton btnCopyRoomId = ViewBindings.findChildViewById(rootView, id);
      if (btnCopyRoomId == null) {
        break missingId;
      }

      id = R.id.btn_disconnect;
      MaterialButton btnDisconnect = ViewBindings.findChildViewById(rootView, id);
      if (btnDisconnect == null) {
        break missingId;
      }

      id = R.id.btn_mute;
      MaterialButton btnMute = ViewBindings.findChildViewById(rootView, id);
      if (btnMute == null) {
        break missingId;
      }

      id = R.id.card_controls;
      CardView cardControls = ViewBindings.findChildViewById(rootView, id);
      if (cardControls == null) {
        break missingId;
      }

      id = R.id.card_header;
      CardView cardHeader = ViewBindings.findChildViewById(rootView, id);
      if (cardHeader == null) {
        break missingId;
      }

      id = R.id.card_my_user;
      CardView cardMyUser = ViewBindings.findChildViewById(rootView, id);
      if (cardMyUser == null) {
        break missingId;
      }

      id = R.id.card_other_user;
      CardView cardOtherUser = ViewBindings.findChildViewById(rootView, id);
      if (cardOtherUser == null) {
        break missingId;
      }

      id = R.id.card_users;
      CardView cardUsers = ViewBindings.findChildViewById(rootView, id);
      if (cardUsers == null) {
        break missingId;
      }

      id = R.id.iv_my_avatar;
      ImageView ivMyAvatar = ViewBindings.findChildViewById(rootView, id);
      if (ivMyAvatar == null) {
        break missingId;
      }

      id = R.id.iv_my_mic_status;
      ImageView ivMyMicStatus = ViewBindings.findChildViewById(rootView, id);
      if (ivMyMicStatus == null) {
        break missingId;
      }

      id = R.id.iv_other_avatar;
      ImageView ivOtherAvatar = ViewBindings.findChildViewById(rootView, id);
      if (ivOtherAvatar == null) {
        break missingId;
      }

      id = R.id.iv_other_mic_status;
      ImageView ivOtherMicStatus = ViewBindings.findChildViewById(rootView, id);
      if (ivOtherMicStatus == null) {
        break missingId;
      }

      id = R.id.tv_connection_status;
      TextView tvConnectionStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvConnectionStatus == null) {
        break missingId;
      }

      id = R.id.tv_my_name;
      TextView tvMyName = ViewBindings.findChildViewById(rootView, id);
      if (tvMyName == null) {
        break missingId;
      }

      id = R.id.tv_my_status;
      TextView tvMyStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvMyStatus == null) {
        break missingId;
      }

      id = R.id.tv_other_name;
      TextView tvOtherName = ViewBindings.findChildViewById(rootView, id);
      if (tvOtherName == null) {
        break missingId;
      }

      id = R.id.tv_other_status;
      TextView tvOtherStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvOtherStatus == null) {
        break missingId;
      }

      id = R.id.tv_participants_title;
      TextView tvParticipantsTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvParticipantsTitle == null) {
        break missingId;
      }

      id = R.id.tv_room_id;
      TextView tvRoomId = ViewBindings.findChildViewById(rootView, id);
      if (tvRoomId == null) {
        break missingId;
      }

      return new FragmentVoiceRoomBinding((ConstraintLayout) rootView, btnCopyRoomId, btnDisconnect,
          btnMute, cardControls, cardHeader, cardMyUser, cardOtherUser, cardUsers, ivMyAvatar,
          ivMyMicStatus, ivOtherAvatar, ivOtherMicStatus, tvConnectionStatus, tvMyName, tvMyStatus,
          tvOtherName, tvOtherStatus, tvParticipantsTitle, tvRoomId);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
